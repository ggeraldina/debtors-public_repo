/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.5/userguide/tutorial_java_projects.html
 */


plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application
    id 'application'

    // stat. analise of the code
    id 'pmd'

    // javafx
    id 'org.openjfx.javafxplugin' version '0.0.8'

    // build exe
    id 'edu.sc.seis.launch4j' version '2.4.6'
}

mainClassName = 'app.Main'
version = '1.0-beta'

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    // jcenter()
    
    mavenCentral()
}

tasks.withType(JavaCompile) {
    options.encoding = 'cp1251'
}

dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:27.1-jre'

    // POI
    implementation 'org.apache.poi:poi:4.1.0'
    implementation 'org.apache.poi:poi-ooxml:4.1.0'

    // DBF
    implementation 'org.jamel.dbf:dbf-reader:0.3.0'

    // SLF4J with Log4j2
    implementation 'org.apache.logging.log4j:log4j-api:2.12.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.12.0'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.12.0'

    // ini
    implementation 'org.ini4j:ini4j:0.5.4'
    
    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

application {
    // Define the main class for the application
    mainClassName = 'app.Main'
}

javafx {
    version = "13-ea+13"
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

jar {
    baseName = 'debtors-irc'
    version = '1.0-beta'
    manifest {
        attributes(
            'Main-Class': 'app.Main',
            'Created-By': 'Grushevskaya Darya (grushevskaya.d.v@yandex.ru), 2019-2020'
        )
    }
    // from configurations.compileClasspath.collect { 
    //     it.isDirectory() ? it : zipTree(it) 
    // }
}

pmd {
    toolVersion = '6.16.0'
    ruleSetFiles = files("pmd.xml")
}

launch4j {
  icon = "${projectDir}/src/main/resources/image/icon.ico"
  outfile = 'Debtors.exe'
  headerType="gui"
  mainClassName = project.mainClassName
  version = '1.0.0.0'
  textVersion = '1.0-beta'  
  copyright = 'Grushevskaya Darya (grushevskaya.d.v@yandex.ru), 2019-2020'
  fileDescription = 'The application for generating debtor list and debt tables based on DBF file'
  productName = 'Debtors'
  internalName = 'Debtors'
  language = 'RUSSIAN'
  jreMinVersion = '1.8.0_161'  
  jdkPreference = 'preferJdk'
}
