<?xml version="1.0"?>
<ruleset name="quickstart"
   xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 https://pmd.sourceforge.io/ruleset_2_0_0.xsd">

  <rule ref="category/java/bestpractices.xml" >
    <!-- TODO !!! временно -->
    <!-- <exclude name="SystemPrintln"/> -->
    <!-- <exclude name="AvoidPrintStackTrace"/> -->
  </rule>

  <rule ref="category/java/codestyle.xml" >
    <!-- Требования использовать final для неизменяемых данных 
    (в целом, весьма неоднозначное требование; на практике 
    чрезмерное использование final сильно замусоривает код,
    не давая больших преимуществ); -->
    <exclude name="LocalVariableCouldBeFinal"/>
    <exclude name="MethodArgumentCouldBeFinal"/>
    <!-- Требование о лишь одной точке выхода из метода 
    (оно неоднозначно, и современная методология уже 
    часто не требует наличия строго одной точки выхода); -->
    <exclude name="OnlyOneReturn"/>
    <!-- Требование об обязательном наличии конструктора класса 
    (оно неоднозначно; вполне допускается не указывать конструктор, 
    если создаваемого конструктора по умолчанию достаточно) -->
    <exclude name="AtLeastOneConstructor"/>
  </rule>

  <rule ref="category/java/errorprone.xml" >
    <!-- Требования об DD/DU/UR-аномалиях (ложные срабатывания, 
    т. к. соответствующие проверки пока не умеют правильно 
    работать с замыканиями Java 8  -->
    <exclude name="DataflowAnomalyAnalysis"/>
    <!-- Позволяет создавать поля только для чтения -->
    <exclude name="BeanMembersShouldSerialize"/>
    <!-- try с ресурсами -->
    <exclude name="CloseResource"/>
    <!-- Убрано указание local для даты -->
    <exclude name="SimpleDateFormatNeedsLocale"/>
  </rule>		

  <rule ref="category/java/performance.xml">
    <!-- Позволяет создавать объекты в цикле -->
    <exclude name="AvoidInstantiatingObjectsInLoops"/>
  </rule>		 

  <rule ref="category/java/codestyle.xml/ShortClassName" class="App">
    <properties>
      <property name="minimum" value="3" />
    </properties>
  </rule>
  
  <!-- Определение стиля именования классов -->
  <rule ref="category/java/codestyle.xml/ClassNamingConventions">
    <properties>
      <property name="utilityClassPattern" value="[A-Z][a-zA-Z0-9]+"/>
    </properties>
  </rule>

  <rule ref="category/java/codestyle.xml/FieldNamingConventions">
    <properties>
        <property name="publicConstantPattern" value="[A-Z][A-Z_0-9]*" />
        <property name="constantPattern" value="[A-Z][A-Z_0-9]*" />
        <property name="enumConstantPattern" value="[A-Z][A-Z_0-9]*" />
        <property name="finalFieldPattern" value="[a-z][a-zA-Z0-9]*" />
        <property name="staticFieldPattern" value="[a-z][a-zA-Z0-9]*" />
        <property name="defaultFieldPattern" value="[a-z][a-zA-Z0-9]*" />
        <property name="exclusions" value="serialVersionUID|serialPersistentFields" />
    </properties>
</rule>


  <!-- откл. всех проверок -->
  <!-- <exclude-pattern>.*/project/App.*</exclude-pattern> -->
   
</ruleset>
